{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/documents/demoapp/src/components/QuestionCard.tsx\";\nimport React, { useState } from 'react';\n\nconst QuestionCard = ({\n  question,\n  options,\n  callback\n}) => {\n  let [selectedAns, setSelectedAns] = useState(\"\");\n\n  const handleSelection = ev => {\n    setSelectedAns(ev.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, question)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => callback(e, selectedAns),\n    className: \"question-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, options.map((opt, ind) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: ind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"opt\",\n      required: true,\n      value: opt,\n      checked: selectedAns === opt,\n      onChange: handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }), opt));\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default QuestionCard;","map":{"version":3,"sources":["/home/ubuntu/documents/demoapp/src/components/QuestionCard.tsx"],"names":["React","useState","QuestionCard","question","options","callback","selectedAns","setSelectedAns","handleSelection","ev","target","value","e","map","opt","ind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAqC;AAEnF,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMO,eAAe,GAAIC,EAAD,IAAa;AACjCF,IAAAA,cAAc,CAACE,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAd;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,QAAL,CADJ,CADJ,eAKI;AAAM,IAAA,QAAQ,EAAGS,CAAD,IAAqCP,QAAQ,CAACO,CAAD,EAAIN,WAAJ,CAA7D;AACI,IAAA,SAAS,EAAC,eADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIQF,OAAO,CAACS,GAAR,CAAY,CAACC,GAAD,EAAcC,GAAd,KAA8B;AACtC,wBACI;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,KAFT;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,KAAK,EAAED,GAJX;AAKI,MAAA,OAAO,EAAER,WAAW,KAAKQ,GAL7B;AAMI,MAAA,QAAQ,EAAEN,eANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASKM,GATL,CADJ,CADJ;AAeH,GAhBD,CAJR,eAsBI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CALJ,CADJ;AAgCH,CAxCD;;AA0CA,eAAeZ,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { questionPropsType } from './../Types/quiz_types'\n\nconst QuestionCard: React.FC<questionPropsType> = ({ question, options, callback }) => {\n\n    let [selectedAns, setSelectedAns] = useState(\"\");\n\n    const handleSelection = (ev: any) => {\n        setSelectedAns(ev.target.value);\n    }\n\n    return (\n        <div className=\"question-container\">\n            <div className=\"question\">\n                <h4>{question}</h4>\n            </div>\n\n            <form onSubmit={(e: React.FormEvent<EventTarget>) => callback(e, selectedAns)}\n                className=\"question-form\"\n                >\n                {\n                    options.map((opt: string, ind: number) => {\n                        return (\n                            <div key={ind}>\n                                <label className=\"radio\">\n                                    <input\n                                        type=\"radio\"\n                                        name=\"opt\"\n                                        required\n                                        value={opt}\n                                        checked={selectedAns === opt}\n                                        onChange={handleSelection}\n                                    />\n                                    {opt}\n                                </label>\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"submit\" className=\"submit\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default QuestionCard;"]},"metadata":{},"sourceType":"module"}