{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/documents/demoapp/src/App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getQuizDetails } from './services/quiz_service';\nimport QuestionCard from './components/QuestionCard';\n\nfunction App() {\n  let [quiz, setQuiz] = useState([]);\n  let [currentStep, setCurrentStep] = useState(0);\n  let [score, setScore] = useState(0);\n  let [showResult, setShowResult] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      const questions = await getQuizDetails(5, 'easy');\n      setQuiz(questions);\n    }\n\n    fetchData();\n  }, []);\n\n  const handleSubmit = (e, userAns) => {\n    e.preventDefault();\n    const currentQuestion = quiz[currentStep];\n    console.log(\"correct And: \" + currentQuestion.correct_answer + \"--user Selection:\" + userAns);\n\n    if (userAns === currentQuestion.correct_answer) {\n      setScore(++score);\n    }\n\n    if (currentStep !== quiz.length - 1) setCurrentStep(++currentStep);else {\n      setShowResult(true);\n    }\n  };\n\n  if (!quiz.length) return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }, \"Loading.. \");\n\n  if (showResult) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-container result-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, \"Result\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"result-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, \"You final score is\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \" \", score), \" out of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 34\n      }\n    }, quiz.length)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Quiz App\"), /*#__PURE__*/React.createElement(QuestionCard, {\n    options: quiz[currentStep].option,\n    question: quiz[currentStep].question,\n    callback: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/documents/demoapp/src/App.tsx"],"names":["React","useEffect","useState","getQuizDetails","QuestionCard","App","quiz","setQuiz","currentStep","setCurrentStep","score","setScore","showResult","setShowResult","fetchData","questions","handleSubmit","e","userAns","preventDefault","currentQuestion","console","log","correct_answer","length","option","question"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,SAASC,GAAT,GAAe;AAEb,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAa,EAAb,CAA9B;AACA,MAAI,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA5C;AACA,MAAI,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAhC;AACA,MAAI,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA1C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,SAAf,GAA2B;AACzB,YAAMC,SAAqB,GAAG,MAAMZ,cAAc,CAAC,CAAD,EAAI,MAAJ,CAAlD;AACAI,MAAAA,OAAO,CAACQ,SAAD,CAAP;AACD;;AACDD,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,YAAY,GAAG,CAACC,CAAD,EAAkCC,OAAlC,KAAsD;AACzED,IAAAA,CAAC,CAACE,cAAF;AAEA,UAAMC,eAAyB,GAAGd,IAAI,CAACE,WAAD,CAAtC;AAEAa,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,eAAe,CAACG,cAAlC,GAAmD,mBAAnD,GAAyEL,OAArF;;AAEA,QAAIA,OAAO,KAAKE,eAAe,CAACG,cAAhC,EAAgD;AAC9CZ,MAAAA,QAAQ,CAAC,EAAED,KAAH,CAAR;AACD;;AAED,QAAIF,WAAW,KAAKF,IAAI,CAACkB,MAAL,GAAc,CAAlC,EACEf,cAAc,CAAC,EAAED,WAAH,CAAd,CADF,KAEK;AACHK,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAhBD;;AAkBA,MAAI,CAACP,IAAI,CAACkB,MAAV,EACE,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;;AAEF,MAAGZ,UAAH,EAAc;AACZ,wBAAQ;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM,eAGN;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKF,KAAL,CAFJ,2BAE2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,IAAI,CAACkB,MAAT,CAF3B,CAHM,CAAR;AAQD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAElB,IAAI,CAACE,WAAD,CAAJ,CAAkBiB,MAD7B;AAEE,IAAA,QAAQ,EAAEnB,IAAI,CAACE,WAAD,CAAJ,CAAkBkB,QAF9B;AAGE,IAAA,QAAQ,EAAEV,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD;;AAED,eAAeX,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getQuizDetails } from './services/quiz_service';\nimport { QuizType } from './Types/quiz_types';\nimport QuestionCard from './components/QuestionCard';\n\nfunction App() {\n\n  let [quiz, setQuiz] = useState<QuizType[]>([])\n  let [currentStep, setCurrentStep] = useState(0)\n  let [score, setScore] = useState(0)\n  let [showResult, setShowResult] = useState(false)\n\n\n  useEffect(() => {\n    async function fetchData() {\n      const questions: QuizType[] = await getQuizDetails(5, 'easy');\n      setQuiz(questions)\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = (e: React.FormEvent<EventTarget>, userAns: string) => {\n    e.preventDefault();\n\n    const currentQuestion: QuizType = quiz[currentStep];\n\n    console.log(\"correct And: \" + currentQuestion.correct_answer + \"--user Selection:\" + userAns)\n\n    if (userAns === currentQuestion.correct_answer) {\n      setScore(++score);\n    }\n\n    if (currentStep !== quiz.length - 1)\n      setCurrentStep(++currentStep);\n    else {\n      setShowResult(true);\n    }\n  }\n\n  if (!quiz.length)\n    return <h3>Loading.. </h3>\n\n  if(showResult){\n    return (<div className=\"question-container result-container\">\n      <h2>Result</h2>\n\n      <p className=\"result-text\">\n        You final score is \n          <b> {score}</b> out of <b>{quiz.length}</b>\n      </p>\n    </div>)\n  }\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      <QuestionCard\n        options={quiz[currentStep].option}\n        question={quiz[currentStep].question}\n        callback={handleSubmit}\n      />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}