{"ast":null,"code":"const shuffleArray = array => [...array].sort(() => Math.random() - 0.5);\n\nexport async function getQuizDetails(totalQuestions, level) {\n  const res = await fetch(`https://opentdb.com/api.php?amount=${totalQuestions}&difficulty=${level}&type=multiple`);\n  let {\n    results\n  } = await res.json();\n  const quiz = results.map(questionObj => {\n    return {\n      question: questionObj.question,\n      answer: questionObj.correct_answer,\n      option: questionObj.incorrect_answers.concat(questionObj.correct_answer)\n    };\n  });\n  return quiz;\n}","map":{"version":3,"sources":["/home/ubuntu/documents/demoapp/src/services/quiz_service.ts"],"names":["shuffleArray","array","sort","Math","random","getQuizDetails","totalQuestions","level","res","fetch","results","json","quiz","map","questionObj","question","answer","correct_answer","option","incorrect_answers","concat"],"mappings":"AAEA,MAAMA,YAAY,GAAIC,KAAD,IACjB,CAAC,GAAGA,KAAJ,EAAWC,IAAX,CAAgB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtC,CADJ;;AAGA,OAAO,eAAeC,cAAf,CAA8BC,cAA9B,EAAsDC,KAAtD,EAAoF;AAEvF,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCH,cAAe,eAAcC,KAAM,gBAA1E,CAAvB;AACA,MAAI;AAACG,IAAAA;AAAD,MAAW,MAAMF,GAAG,CAACG,IAAJ,EAArB;AAEA,QAAMC,IAAI,GAAGF,OAAO,CAACG,GAAR,CAAaC,WAAD,IAAoB;AACzC,WAAO;AACHC,MAAAA,QAAQ,EAAED,WAAW,CAACC,QADnB;AAEHC,MAAAA,MAAM,EAAEF,WAAW,CAACG,cAFjB;AAGHC,MAAAA,MAAM,EAAIJ,WAAW,CAACK,iBAAZ,CAA8BC,MAA9B,CAAqCN,WAAW,CAACG,cAAjD;AAHP,KAAP;AAKH,GANY,CAAb;AAOA,SAAOL,IAAP;AACH","sourcesContent":["import {Quiz} from './../Types/quiz_types'\n\nconst shuffleArray = (array: any[]) =>\n    [...array].sort(() => Math.random() - 0.5)\n\nexport async function getQuizDetails(totalQuestions: number, level: string):Promise<Quiz[]>{\n\n    const res = await fetch(`https://opentdb.com/api.php?amount=${totalQuestions}&difficulty=${level}&type=multiple`)\n    let {results}= await res.json();\n\n    const quiz = results.map((questionObj:Quiz)=>{\n        return {\n            question: questionObj.question,\n            answer: questionObj.correct_answer,\n            option:  (questionObj.incorrect_answers.concat(questionObj.correct_answer))     \n        }\n    })\n    return quiz;\n}"]},"metadata":{},"sourceType":"module"}